{"version":3,"sources":["Components/styles/styleVars.js","Components/styles/text.js","Components/styles/buttons.js","Components/Header.js","utils/githubLogin.js","Components/LoginText.js","Components/styles/forms.js","Components/Login.js","Components/Search.js","Components/styles/containers.js","Components/UserThumb.js","Components/UserThumbToggle.js","Components/UserThumbList.js","Components/UserComponents/LargeUser.js","Components/UserComponents/UserToggle.js","utils/utils.js","Components/styles/headerContainer.js","Components/UserComponents/SmallUser.js","Components/UserComponents/UserDetails.js","Components/RepoComponents/RepoStats.js","Components/RepoComponents/RepoDetailToggle.js","Components/styles/repoContainers.js","Components/RepoComponents/SmallRepo.js","Components/RepoComponents/RepoList.js","Components/RepoComponents/RepoSearchToggle.js","Components/RepoComponents/RepoSizeData.js","Components/RepoComponents/RepoLangChart.js","Components/RepoComponents/RepoContChart.js","Components/RepoComponents/RepoContributions.js","Components/RepoComponents/LargeRepo.js","Components/RepoComponents/UserRepos.js","Components/App.js","utils/graphqlClient.js","index.js"],"names":["styleVars","colors","black","white","off_white","lightGrey","midGrey","grey","darkGrey","blue","lightBlue","bgBlue","paleBlue","red","darkRed","yellow","pink","lightPink","bgPink","palePink","spacing","xSmall","small","med","large","xLarge","xxLarge","fontSize","xxSmall","fontWeight","light","fontName","main","boxShadow","out","in","border","SmallText","styled","div","_templateObject","props","loginStatus","SmallHeaderText","_templateObject2","HeaderLabel","h1","_templateObject3","Stats","_templateObject4","Button","input","buttons_templateObject","TextButton","button","buttons_templateObject2","ToggleButton","buttons_templateObject3","isActive","ExpandButton","buttons_templateObject4","expanded","ArrowButton","_templateObject5","Header","logoutSubmit","showLogout","process","react_default","a","createElement","Fragment","onClick","base64","require","config","githubLogin","name","pwd","bytes","trim","encoded","encode","fetch","method","headers","Authorization","User-Agent","Content-Type","Accept","body","JSON","stringify","client_id","client_secret","scopes","note","then","response","json","status","token","Error","message","LoginText","href","rel","Form","form","forms_templateObject","SearchForm","forms_templateObject2","LoginForm","forms_templateObject3","TextInput","forms_templateObject4","CustomRadio","label","forms_templateObject5","Login","state","username","password","formError","handleInput","e","items","parse","_this","target","id","value","length","setState","Object","objectSpread","handleLoginSubmit","preventDefault","_this$state","loginSubmit","catch","err","_this2","this","htmlFor","placeholder","type","onChange","Components_LoginText","React","Component","Search","searchType","handleUserName","handleSearchType","handleSearchSubmit","searchSubmit","checked","ThumbBase","li","containers_templateObject","Thumb","containers_templateObject2","ThumbButton","containers_templateObject3","UserThumb","avatarUrl","login","url","displayName","src","alt","UserThumbToggle","more","aria-labelledby","xmlns","width","height","viewBox","lang","d","UserThumbList","handleExpand","_this$props","thumbs","keys","collaborators","forks","users","map","v","i","assign","expandThumb","thumbList","slice","showToggle","item","Components_UserThumb","key","Components_UserThumbToggle","LARGE_USER_QUERY","gql","LargeUser_templateObject","LargeUser","_ref","react_apollo_esm","query","variables","_ref2","loading","error","data","_data$user","user","email","websiteUrl","followers","following","totalCount","UserThumbList_UserThumbList","nodes","UserToggle","text","dateFormat","string","Date","toLocaleDateString","year","month","day","arrDate","start","index","getTime","repoSize","size","band","u","k","m","prefix","Math","pow","concat","toFixed","arrMake","obj","Container","headerContainer_templateObject","offSet","header","headerContainer_templateObject2","Content","section","headerContainer_templateObject3","headerContainer_templateObject4","Extra","headerContainer_templateObject5","SMALL_USER_QUERY","SmallUser_templateObject","SmallUser","btnClick","bio","createdAt","headerContainer_Header","className","headerContainer_Button","UserComponents_UserToggle","LargeUser_LargeUser","UserDetails","detailsToggle","SmallUser_SmallUser","REPO_STATS_QUERY","RepoStats_templateObject","RepoStats","repositories","repositoriesContributedTo","forkedRepoCount","edges","filter","node","isFork","nonForkedCount","RepoDetailToggle","owner","direction","RepoContainer","repoContainers_templateObject","RepoBase","repoContainers_templateObject2","Repo","repoContainers_templateObject3","langColor","langName","RepoSection","repoContainers_templateObject4","borderTop","LangChart","repoContainers_templateObject5","LangCell","_templateObject6","cellWidth","colorHex","LangLabel","_templateObject7","CommitChart","_templateObject8","barWidth","CommitCol","_templateObject9","barHeight","barColour","SmallRepo","primaryLanguage","updatedAt","stargazers","watchers","color","RepoComponents_RepoDetailToggle","authored","RepoList_templateObject","contributed","RepoList_templateObject2","RepoList","search","listKey","repoList","SmallRepo_SmallRepo","RepoSearchToggle","active","RepoSizeData","disk","RepoLangChart","objArr","arr","details","languages","Xer","reduce","b","cells","labels","percentSize","push","title","RepoContChart","repos","oldest","occurredAt","chartColumns","newest","round","dateDiff","maxHeight","max","apply","toConsumableArray","calcHeight","commitCount","maxCommits","bars","Array","fill","find","undefined","commits","date","CONTRIBUTIONS_QUERY","RepoContributions_templateObject","RepoContributions","repoId","pushedAt","info","commitContributionsByRepository","contributionsCollection","noContrib","repository","_commitContributionsB2","contributions","RepoComponents_RepoContChart","LARGE_REPO_QUERY","LargeRepo_templateObject","LargeRepo","offset","_data$repository","description","diskUsage","mentionableUsers","totalSize","sizeData","contribData","RepoComponents_RepoSizeData","RepoComponents_RepoLangChart","RepoContributions_RepoContributions","UserRepos","selected","searchToggle","newState","divOff","closest","parentNode","offsetTop","window","pageYOffset","newDetails","activeSearch","RepoStats_RepoStats","RepoComponents_RepoSearchToggle","RepoList_RepoList","LargeRepo_LargeRepo","App","suggestions","tokenKey","sessionStorage","startsWith","removeItem","accessToken","setItem","formDetails","bgGrad","document","style","background","client","httpLink","HttpLink","uri","authorization","cache","InMemoryCache","ApolloClient","link","graphqlClient","pageContent","Search_Search","UserDetails_UserDetails","UserRepos_UserRepos","Login_Login","Components_Header","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.ecb64886.chunk.js","sourcesContent":["const styleVars = {\n  colors: {\n    black: \"black\",\n    white: \"white\",\n    // greys\n    off_white: \"#eee\",\n    lightGrey: \"#f7f7f7\",\n    midGrey: \"#d8d8d8\",\n    grey: \"grey\",\n    darkGrey: \"dimgrey\",\n    // blues\n    blue: \"#0348a3\",\n    lightBlue: \"#0469ee\",\n    bgBlue: \"#aaf5ff\",\n    paleBlue: \"#eefdff\",\n    // reds\n    red: \"tomato\",\n    darkRed: \"#d9391c\",\n    yellow: \"#fcbc00\",\n    // pinks\n    pink: \"#c91f6c\",\n    lightPink: \"#e13ab0\",\n    bgPink: \"#eb7caf\",\n    palePink: \"#fbe4ef\"\n  },\n  spacing: {\n    xSmall: \"0.125rem\",\n    small: \"0.25rem\",\n    med: \"0.5rem\",\n    large: \"1rem\",\n    xLarge: \"2rem\",\n    xxLarge: \"5rem\"\n  },\n  fontSize: {\n    xxSmall: \"0.95rem\",\n    xSmall: \"1.125rem\",\n    small: \"1.25rem\",\n    med: \"1.525rem\",\n    large: \"1.875rem\",\n    xLarge: \"2.5rem\"\n  },\n  fontWeight: {\n    light: \"400\",\n    med: \"600\"\n  },\n  fontName: {\n    main: '\"Signika Negative\", sans-serif'\n  },\n  boxShadow: {\n    out: \"-0.125rem 0.25rem 0.35rem rgba(0,0,0,0.15)\", // -0.125rem 0.25rem 1.5rem rgba(0, 0, 0, 0.25)\n    in: \"-0.125rem 0.25rem 1.5rem inset rgba(0, 0, 0, 0.25)\"\n  },\n  border: {\n    black: \"0.1rem solid black\",\n    grey: \"0.1rem solid grey\"\n  }\n};\n\nexport default styleVars;\n","// text\n// - text that isn't within a backing container\n\n// get variables\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\n\nconst { colors, spacing, fontSize } = styleVars;\n\n// small text\n// - footer on login screen\nconst SmallText = styled.div`\n  font-size: ${fontSize.xSmall};\n  color: ${colors.grey};\n  p {\n    margin-bottom: ${spacing.large};\n  }\n  a {\n    display: inline-block;\n    text-decoration: none;\n    margin-right: ${spacing.xLarge};\n    margin-bottom: ${spacing.large};\n    cursor: pointer;\n    transition: all ease-in-out 0.3s;\n    border-bottom: 0.1rem solid;\n    color: ${props => (props.loginStatus ? colors.blue : colors.pink)};\n    &:hover {\n      color: ${props =>\n        props.loginStatus ? colors.lightBlue : colors.lightPink};\n    }\n    &:focus {\n      color: ${colors.red};\n    }\n    &:nth-child(2) {\n      margin-right: 0;\n    }\n  }\n`;\n\n// header when logged in\nconst SmallHeaderText = styled(SmallText)`\n  p {\n    text-align: center;\n    @media screen and (min-width: 35rem) {\n      text-align: right;\n    }\n  }\n`;\n\n// - - - - - - - - - - -\n// header label\nconst HeaderLabel = styled.h1`\n  line-height: 1;\n  display: inline-block;\n  margin-bottom: ${spacing.large};\n  padding: ${spacing.med} ${spacing.large};\n  border-radius: ${spacing.small};\n  transform: skew(-10deg);\n  background-color: white;\n  color: ${props => (props.loginStatus ? colors.blue : colors.pink)};\n  box-shadow: 0.15rem 0.15rem 0.3rem\n    ${props => (props.loginStatus ? colors.blue : colors.pink)};\n`;\n\n// - - - - - - - - - - -\n// repo stats\nconst Stats = styled.div`\n  margin-bottom: ${spacing.xLarge};\n  > div {\n    margin-bottom: ${spacing.large};\n  }\n  > button {\n    margin-right: ${spacing.xLarge};\n  }\n`;\n\nexport { SmallText, SmallHeaderText, HeaderLabel, Stats };\n","// buttons\n// - including form input[type=submit], and buttons that look like text\n// - props colour the buttons\n\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\nconst { colors, spacing, fontName, fontSize } = styleVars;\n\n// input type = text\n// - takes login prop\nconst Button = styled.input`\n  cursor: pointer;\n  font-family: ${fontName.main};\n  font-size: ${fontSize.small};\n  padding: ${spacing.med} ${spacing.large};\n  border: 0;\n  border-radius: ${spacing.small};\n  transition: all ease-in-out 0.3s;\n  color: ${colors.white};\n  background-color: ${props => (props.loginStatus ? colors.blue : colors.pink)};\n  &:hover,\n  &:focus {\n    outline: none;\n    background-color: ${props =>\n      props.loginStatus ? colors.lightBlue : colors.lightPink};\n  }\n  @media screen and (min-width: 35rem) {\n    font-size: ${fontSize.med};\n  }\n`;\n\n// button that looks like text\n// - in header\nconst TextButton = styled.button`\n  cursor: pointer;\n  font-family: ${fontName.main};\n  font-size: ${fontSize.xSmall};\n  padding: 0;\n  margin-left: ${spacing.med};\n  background-color: transparent;\n  border: 0;\n  transition: all ease-in-out 0.3s;\n  color: ${colors.blue};\n  border-bottom: 0.1rem solid;\n  &:hover {\n    color: ${colors.lightBlue};\n  }\n  &:focus {\n    color: ${colors.red};\n  }\n`;\n\n// button\n// - used for search toggle\nconst ToggleButton = styled.button`\n  cursor: pointer;\n  font-family: ${fontName.main};\n  font-size: ${fontSize.small};\n  padding: ${spacing.med} ${spacing.large};\n  background-color: ${props =>\n    props.isActive ? colors.lightBlue : colors.grey};\n  color: ${colors.white};\n  border: 0;\n  border-radius: ${spacing.small};\n  transition: all ease-in-out 0.3s;\n  &:hover,\n  &:focus {\n    outline: none;\n    background-color: ${props =>\n      props.isActive ? colors.blue : colors.darkGrey};\n  }\n`;\n\n// user profile expand button\n// expanded : not expanded\nconst ExpandButton = styled.button`\n  cursor: pointer;\n  font-family: ${fontName.main};\n  font-size: ${fontSize.small};\n  padding: ${spacing.med} ${spacing.large};\n  background-color: ${props => (props.expanded ? colors.blue : colors.white)};\n  color: ${props => (props.expanded ? colors.white : colors.blue)};\n  border: 0.2rem solid ${colors.blue};\n  border-radius: ${spacing.small};\n  transition: all ease-in-out 0.3s;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: ${props =>\n      props.expanded ? colors.lightBlue : colors.blue};\n    border-color: ${props => (props.expanded ? colors.lightBlue : colors.blue)};\n    color: ${props => (props.expanded ? colors.white : colors.white)};\n  }\n`;\n\n// user repos arrow button\n// - make a different view to show LargeRepo card\n// - contains an svg\n// - make arrow left as well\n// - add disabled attr for expanded\nconst ArrowButton = styled.button`\n  cursor: pointer;\n  padding: 0;\n  background-color: transparent;\n  border: 0;\n  transition: all ease-in-out 0.3s;\n\n  width: 4rem;\n  height: 4rem;\n  border-radius: ${spacing.xLarge};\n  color: ${colors.darkGrey};\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    background-color: ${colors.off_white};\n  }\n`;\n\nexport { Button, TextButton, ToggleButton, ExpandButton, ArrowButton };\n","import React from \"react\";\n\n// styles\nimport { SmallHeaderText, HeaderLabel } from \"./styles/text\";\nimport { TextButton } from \"./styles/buttons\";\n\nconst Header = props => {\n  // logoutSubmit could be an optional prop. Look into testing with this\n  const { loginStatus, logoutSubmit } = props;\n\n  // This is used to show / hide a logout button for those on github pages\n  const showLogout = loginStatus && process.env.NODE_ENV !== \"development\";\n\n  return (\n    <>\n      {showLogout && (\n        <SmallHeaderText>\n          <p>\n            You are logged in and on github pages.{\" \"}\n            <TextButton onClick={logoutSubmit}>\n              Click here to log out\n            </TextButton>\n          </p>\n        </SmallHeaderText>\n      )}\n      <HeaderLabel loginStatus={loginStatus}>Github GraphQL API</HeaderLabel>\n      <p>Search Github users and their repositories with GraphQL API</p>\n    </>\n  );\n};\n\nexport default Header;\n","// github login stuff\nconst base64 = require(\"base-64\");\n\nconst config = {\n  GITHUB_CLIENT_ID: \"e0b1671ff764de482212\",\n  GITHUB_CLIENT_SECRET: \"8f77dcfd6a807cff38ac558400c859f240806071\"\n};\nconst AUTH_URL_PATH = \"https://api.github.com/authorizations\";\n\nconst githubLogin = (name, pwd) => {\n  const bytes = name.trim() + \":\" + pwd.trim();\n  const encoded = base64.encode(bytes);\n\n  return fetch(AUTH_URL_PATH, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"Basic \" + encoded,\n      \"User-Agent\": \"GitHub Issue Browser\",\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      Accept: \"application/vnd.github.inertia-preview+json\"\n    },\n    body: JSON.stringify({\n      client_id: config.GITHUB_CLIENT_ID,\n      client_secret: config.GITHUB_CLIENT_SECRET,\n      scopes: [\"user\", \"repo\"],\n      note: \"not abuse\"\n    })\n  }).then(response =>\n    response.json().then(json => {\n      if (response.status < 400) {\n        return json.token;\n      } else {\n        throw new Error(json.message);\n      }\n    })\n  );\n};\nexport { githubLogin };\n","import React from \"react\";\nimport { SmallText } from \"./styles/text\";\n\nconst LoginText = props => {\n  const { loginStatus } = props;\n  return (\n    <SmallText loginStatus={loginStatus}>\n      <p>\n        Github GraphQL API requires a personal access token to authenticate\n        queries, which cannot be stored on the Github Pages host securely. Your\n        login will generate a temporary access token, which will be stored only\n        in your browser. Find out more about Github GraphQL API below:\n      </p>\n      <p>\n        <a\n          href=\"https://developer.github.com/v4/guides/forming-calls/#authenticating-with-graphql\"\n          rel=\"noopener\"\n        >\n          Authenticating with GraphQL\n        </a>\n        <a\n          href=\"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line\"\n          rel=\"noopener\"\n        >\n          Github Personal Access Token\n        </a>\n      </p>\n    </SmallText>\n  );\n};\n\nexport default LoginText;\n","// forms\n// - form containers, text input, and radios\n// - not including buttons\n\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\nconst { colors, spacing, fontName, fontSize, boxShadow } = styleVars;\n\n// all forms contain inputs wrapped in divs\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: ${spacing.xLarge} 0;\n  padding: ${spacing.large};\n  background-color: ${colors.lightGrey};\n  border-radius: ${spacing.small};\n  box-shadow: ${boxShadow.out};\n  // rows\n  > div {\n    display: flex;\n    flex-direction: column;\n    margin-top: ${spacing.large};\n  }\n  > div:nth-child(1) {\n    margin-top: 0;\n  }\n`;\n\n// search form\nconst SearchForm = styled(Form)`\n  // radio and submit container\n  > div:nth-child(2) {\n    flex-direction: column;\n    justify-content: space-between;\n    // wrap at wider widths\n    @media screen and (min-width: 40rem) {\n      flex-direction: row;\n      align-items: center;\n    }\n    // radio container\n    > div:nth-child(1) {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: ${spacing.large};\n      @media screen and (min-width: 30rem) {\n        flex-direction: row;\n      }\n      @media screen and (min-width: 40rem) {\n        margin-bottom: 0;\n      }\n    }\n    // submit container\n    > div:nth-child(2) {\n      align-self: flex-end;\n    }\n  }\n  // labels on radios\n  label {\n    margin-left: 0;\n    margin-bottom: ${spacing.med};\n    @media screen and (min-width: 30rem) {\n      &[for=\"repodetails\"] {\n        margin-left: ${spacing.large};\n        margin-bottom: 0;\n      }\n    }\n  }\n`;\n\n// login form\nconst LoginForm = styled(Form)`\n  // submit container\n  > div:nth-child(3) {\n    align-self: flex-end;\n  }\n`;\n\n// text and password input\n// - div containing label and input\nconst TextInput = styled.input`\n  font-family: ${fontName.main};\n  font-size: ${fontSize.small};\n  padding: ${spacing.med};\n  border: 0.2rem solid ${colors.grey};\n  border-radius: ${spacing.small};\n  &:focus {\n    outline: none;\n    background-color: ${props =>\n      props.loginStatus\n        ? colors.paleBlue\n        : colors.palePink} !important; // override user agent stylesheet\n    border: 0.2rem solid\n      ${props => (props.loginStatus ? colors.blue : colors.pink)};\n  }\n`;\n\n// radio inputs\nconst CustomRadio = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  height: ${spacing.xLarge};\n  padding-left: 2.5rem;\n  margin-left: ${spacing.large};\n  cursor: pointer;\n  user-select: none;\n  // default radio input\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    &:checked ~ span {\n      background-color: ${colors.blue};\n      &:after {\n        display: block;\n      }\n    }\n  }\n  // hover state\n  &:hover input ~ span {\n    background-color: ${colors.grey};\n  }\n  // new custom input\n  span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: ${spacing.xLarge};\n    width: ${spacing.xLarge};\n    border-radius: 50%;\n    background-color: ${colors.midGrey};\n    &:after {\n      content: \"\";\n      position: absolute;\n      display: none;\n      top: 25%;\n      left: 25%;\n      width: 50%;\n      height: 50%;\n      border-radius: 50%;\n      background: white;\n    }\n  }\n`;\n\nexport { Form, SearchForm, LoginForm, TextInput, CustomRadio };\n","// React\nimport React from \"react\";\n\n// login and authentication\nimport { githubLogin } from \"../utils/githubLogin\";\n\n// components\nimport LoginText from \"./LoginText\";\n\n// styles\nimport { LoginForm, TextInput } from \"./styles/forms\";\nimport { Button } from \"./styles/buttons\";\n\n// convert a username and password into a token\n// - use this token to log the user in in app.js\nexport default class Login extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    formError: false\n  };\n\n  // universal handle input method\n  // https://goo.gl/9p2vKq - password autocomplete\n  handleInput = e => {\n    const items = JSON.parse(JSON.stringify(this.state));\n    items[e.target.id] = e.target.value;\n    // reset the error message\n    if (e.target.value.length < 2) items.formError = false;\n    this.setState({ ...items });\n  };\n\n  // this will create a token, loggin the use in in app.js\n  handleLoginSubmit = e => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n    // lazy check\n    // - need an error message if token fails\n    if (username.length > 2 && password.length > 4) {\n      githubLogin(username, password)\n        .then(token => {\n          this.props.loginSubmit(token);\n        })\n        .catch(err => this.setState({ formError: true })); // logs bad credentials\n    } else {\n      this.setState({ formError: true });\n    }\n  };\n\n  render() {\n    const { loginStatus } = this.props;\n    return (\n      <>\n        <LoginForm>\n          <div>\n            <label htmlFor=\"username\">Username</label>\n            <TextInput\n              placeholder=\"Github Username\"\n              id=\"username\"\n              type=\"text\"\n              onChange={this.handleInput}\n              loginStatus={loginStatus}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <TextInput\n              placeholder=\"Github Password\"\n              id=\"password\"\n              type=\"password\"\n              onChange={this.handleInput}\n              loginStatus={loginStatus}\n            />\n          </div>\n          <div>\n            <Button\n              loginStatus={loginStatus}\n              type=\"submit\"\n              value=\"Login\"\n              onClick={e => this.handleLoginSubmit(e)}\n            />\n          </div>\n          {this.state.formError && (\n            <p>Your username or password was incorrect. Please try again.</p>\n          )}\n        </LoginForm>\n        <LoginText loginStatus={loginStatus} />\n      </>\n    );\n  }\n}\n","// React\nimport React from \"react\";\n\n// styles\nimport { SearchForm, TextInput, CustomRadio } from \"./styles/forms\";\nimport { Button } from \"./styles/buttons\";\n\n// Search.js triggers api calls, and populates components, based on its state:\n// - Repository\n// - UserDetails\n// - UserRepos\n\n// possible autocomplete (name search):\n// - search by username onChange\n// - search based on text input val\n\nexport default class Search extends React.Component {\n  state = {\n    username: \"\",\n    searchType: this.props.searchType,\n    formError: false\n  };\n\n  // text input takes username input\n  // - for users with lots of repos, a second search may be more appropriate\n  handleUserName = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  // search for user details, or a specific user's repos\n  handleSearchType = e => {\n    this.setState({ searchType: e.target.id });\n  };\n\n  // Submit passes triggers different search types in other components\n  handleSearchSubmit = e => {\n    e.preventDefault();\n    const { username } = this.state;\n\n    // githubusername regex didn't work too well, make username +2 characters\n    if (username.length > 2) {\n      this.props.searchSubmit(this.state);\n    } else {\n      this.setState({ formError: true });\n    }\n  };\n\n  render() {\n    const { loginStatus } = this.props;\n    const { searchType, formError } = this.state;\n    return (\n      <SearchForm>\n        <div>\n          <label htmlFor=\"username\">Username</label>\n          <TextInput\n            id=\"username\"\n            type=\"text\"\n            onChange={this.handleUserName}\n            loginStatus={loginStatus}\n          />\n        </div>\n        <div>\n          <div>\n            <CustomRadio htmlFor=\"userdetails\">\n              Get User's Details\n              <input\n                type=\"radio\"\n                name=\"userdetails\"\n                id=\"userdetails\"\n                checked={searchType === \"userdetails\"}\n                onChange={this.handleSearchType}\n              />\n              <span />\n            </CustomRadio>\n            <CustomRadio htmlFor=\"repodetails\">\n              Get User's Repositories\n              <input\n                type=\"radio\"\n                name=\"repodetails\"\n                id=\"repodetails\"\n                checked={searchType === \"repodetails\"}\n                onChange={this.handleSearchType}\n              />\n              <span />\n            </CustomRadio>\n          </div>\n          <div>\n            <Button\n              loginStatus={loginStatus}\n              type=\"submit\"\n              value=\"Submit\"\n              onClick={e => this.handleSearchSubmit(e)}\n            />\n          </div>\n        </div>\n        {formError && <p>Please enter a valid username</p>}\n      </SearchForm>\n    );\n  }\n}\n","// get variables\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\n\nconst { colors, spacing, fontSize, fontName } = styleVars;\n\n// universal containers\n// - used by both user search, repo search, and anything else\n\nconst ThumbBase = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${spacing.large};\n  margin-bottom: ${spacing.large};\n`;\n\n// 1.\n// user thumbnail\nconst Thumb = styled(ThumbBase)`\n  a {\n    width: ${spacing.xxLarge};\n    height: ${spacing.xxLarge};\n    border-radius: 2.5rem;\n    border: 0.2rem solid ${colors.white};\n    overflow: hidden;\n    &:hover ~ p {\n      display: block;\n      padding: ${spacing.xSmall} ${spacing.small};\n      border-radius: ${spacing.xSmall};\n      background-color: ${colors.blue};\n      color: ${colors.white};\n    }\n    &:hover {\n      border: 0.2rem solid ${colors.blue};\n    }\n  }\n  img {\n    width: 100%;\n    height: auto;\n  }\n  p {\n    display: none;\n    position: absolute;\n    left: 0;\n    top: -${spacing.xLarge};\n    white-space: nowrap;\n    pointer-events: none;\n    font-size: ${fontSize.xSmall};\n  }\n`;\n\n// 2.\n// expand button is here rather than in buttons\nconst ThumbButton = styled(ThumbBase)`\n  button {\n    // resets\n    border: 0;\n    cursor: pointer;\n    // styling\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: ${spacing.xxLarge};\n    height: ${spacing.xxLarge};\n    border-radius: 2.5rem;\n    padding: ${spacing.med};\n    font-family: ${fontName.main};\n    font-size: ${fontSize.xSmall};\n    transition: all ease-in-out 0.3s;\n    background-color: ${colors.blue};\n    color: ${colors.white};\n    &:hover {\n      background-color: ${colors.lightBlue};\n    }\n    &:focus {\n      outline: none;\n    }\n    svg {\n      fill: ${colors.white};\n      margin-right: -${spacing.med};\n    }\n  }\n`;\nexport { Thumb, ThumbButton };\n","// round user thumbnails\nimport React from \"react\";\n\n// styles\nimport { Thumb } from \"./styles/containers\";\n\nconst UserThumb = props => {\n  const { avatarUrl, login, name, url } = props;\n  const displayName = name ? name : login;\n\n  return (\n    <Thumb>\n      <a href={url}>\n        <img src={avatarUrl} alt={login} />\n      </a>\n      <p>{displayName}</p>\n    </Thumb>\n  );\n};\n\nexport default UserThumb;\n","// round user thumbnails\nimport React from \"react\";\n\n// styles\nimport { ThumbButton } from \"./styles/containers\";\n\nconst UserThumbToggle = props => {\n  const { more, onClick } = props;\n\n  return (\n    <ThumbButton>\n      <button onClick={onClick}>\n        + {more} more\n        <svg\n          aria-labelledby={more}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"48\"\n          height=\"48\"\n          viewBox=\"0 0 48 48\"\n        >\n          <title id={more} lang=\"en\">\n            {more}\n          </title>\n\n          <path d=\"M20 12l-2.83 2.83L26.34 24l-9.17 9.17L20 36l12-12z\" />\n        </svg>\n      </button>\n    </ThumbButton>\n  );\n};\n\nexport default UserThumbToggle;\n","// list of thumbnails, with click to reveal more\nimport React from \"react\";\n\n// components\nimport UserThumb from \"./UserThumb\";\nimport UserThumbToggle from \"./UserThumbToggle\";\n\n// show first 10, then a button to reveal more\nexport default class UserThumbList extends React.Component {\n  state = {\n    expanded: false\n  };\n  handleExpand = () => {\n    this.setState({ expanded: true });\n  };\n  render() {\n    const { thumbs, type } = this.props;\n    const { expanded } = this.state;\n\n    // thumbs parsed differently for the following (remove a layer of nesting):\n    // - mentionable users (collaborators), key = node\n    // - forks, key = owner\n    const keys = {\n      collaborators: \"node\",\n      forks: \"owner\"\n    };\n    const users = type ? Object.keys(thumbs).map((v, i) => Object.assign({}, thumbs[i][keys[type]])) : thumbs;\n\n    // expand button\n    const expandThumb = { more: users.length - 9 };\n    // thumbnail list\n    const thumbList = users.length > 9 && !expanded ? users.slice(0, 9) : users;\n    // display toggle button or not\n    const showToggle = !expanded && users.length > 9;\n\n    return (\n      <ul>\n        {thumbList.map(item => (\n          <UserThumb key={item.id} {...item} />\n        ))}\n        {showToggle && <UserThumbToggle {...expandThumb} onClick={this.handleExpand} />}\n      </ul>\n    );\n  }\n}\n","// show more user details\nimport React from \"react\";\n\n// GraphQL\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// components\nimport UserThumbList from \"../UserThumbList\";\n\n// large user query\nconst LARGE_USER_QUERY = gql`\n  query UsernameQuery($login: String!) {\n    user(login: $login) {\n      followers(first: 100) {\n        totalCount\n        nodes {\n          avatarUrl(size: 80)\n          id\n          login\n          name\n          url\n        }\n      }\n      following(first: 100) {\n        totalCount\n        nodes {\n          avatarUrl(size: 80)\n          id\n          login\n          name\n          url\n        }\n      }\n      url\n      websiteUrl\n    }\n  }\n`;\n\nconst LargeUser = ({ login }) => (\n  <Query query={LARGE_USER_QUERY} variables={{ login }}>\n    {({ loading, error, data }) => {\n      // return loading and error first\n      if (loading) return <>Loading extra details...</>;\n      if (error) return <>Extra details not found</>;\n\n      // just focus on following / followers, repos in order search\n      const { email, url, websiteUrl, followers, following } = data.user;\n\n      return (\n        <>\n          {followers.totalCount > 0 && <h3>Followers:</h3>}\n          {followers.totalCount > 0 && (\n            <UserThumbList thumbs={followers.nodes} />\n          )}\n          {following.totalCount > 0 && <h3>Following:</h3>}\n          {following.totalCount > 0 && (\n            <UserThumbList thumbs={following.nodes} />\n          )}\n          {email && <li>Contact this user on: {email}</li>}\n          {websiteUrl && (\n            <p>\n              <a href={websiteUrl}>User's personal website</a>\n            </p>\n          )}\n          <p>\n            <a href={url}>Link to Profile ></a>\n          </p>\n        </>\n      );\n    }}\n  </Query>\n);\n\nexport { LARGE_USER_QUERY, LargeUser };\n","import React from \"react\";\n\n// styles\nimport { ExpandButton } from \"../styles/buttons\";\n\n// works with state for expanded  in UserDetails.js\nconst UserToggle = props => {\n  const { expanded, onClick } = props;\n  const text = !expanded ? \"Show More\" : \"Show Less\";\n\n  return (\n    <ExpandButton onClick={onClick} expanded={expanded}>\n      {text}\n    </ExpandButton>\n  );\n};\n\nexport default UserToggle;\n","// date functions\n// - date format\nconst dateFormat = string => {\n  const options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\n  return new Date(string).toLocaleDateString(\"en-GB\", options);\n};\n\n// - get days between two dates\nconst dateDiff = (newest, oldest) => {\n  // no date is 0, return 100 to make one column\n  if (newest === 0 || oldest === 0) return 100;\n  else if (newest === oldest) return 1;\n  const a = new Date(newest);\n  const b = new Date(oldest);\n  return Math.round((a - b) / (1000 * 60 * 60 * 24));\n};\n\n// date creation function\n// - creates a date based on the item index and staring date in array\nconst arrDate = (start, index) => {\n  const options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\n  return new Date(new Date(start).getTime() + 60 * 60 * (24 * index) * 1000).toLocaleDateString(\"en-GB\", options);\n};\n\n// - - - - - - - - -\n// abbreviate function\nconst abbrev = (string, length) => {\n  return string.length > length ? `${string.slice(0, length)}...` : string;\n};\n\n// repo size function - convert combined filesize to a nicer format\n// - mb > 1 million\n// - kb > 1 thousand\nconst repoSize = size => {\n  const band = {\n    u: [0, 0, \"bytes\"],\n    k: [3, 1, \"kb\"],\n    m: [6, 2, \"mb\"]\n  };\n  const prefix = size < Math.pow(10, 6) ? (size < Math.pow(10, 3) ? band.u : band.k) : band.m;\n  return `${(size / Math.pow(10, prefix[0])).toFixed(prefix[1])} ${prefix[2]}`;\n};\n\n// - - - - - - - - -\n// object and array functions\n// - make objects and arrays from keys\nconst objMake = (obj, key) => Object.keys(obj).map((v, i) => Object.assign({}, obj[i][key]));\nconst arrMake = (obj, key) => Object.keys(obj).map((v, i) => obj[i][key]);\n\n// add array to object size key\nconst arrToObj = (objArr, arr) => objArr.map((v, i) => Object.assign({ size: arr[i] }, objArr[i]));\n\n// get greatest value from a certain property in array of objects\n// const topNumber = (arr, prop) => arr.reduce((a, b) => Math.max(a[prop], b[prop]));\n// , topNumber\n\nexport { dateFormat, dateDiff, arrDate, abbrev, repoSize, objMake, arrMake, arrToObj };\n","// container with image header / thumbnail\n// get variables\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\n\nconst { colors, spacing, fontSize, boxShadow, border } = styleVars;\n\n// outer container\nconst Container = styled.div`\n  // top margin - large repo offset\n  margin-top: ${props => (props.offSet ? `${props.offSet}px` : 0)};\n  // outer container\n  background-color: ${colors.white};\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 40rem) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n  width: 100%;\n  overflow: hidden;\n  border-radius: ${spacing.small};\n  box-shadow: ${boxShadow.out};\n`;\n\n// image header\nconst Header = styled.header`\n  position: relative;\n  overflow: hidden;\n  max-height: 18.25rem;\n  border-bottom: ${border.black};\n  @media screen and (min-width: 40rem) {\n    max-width: 15rem;\n    border-bottom: 0;\n    border-right: ${border.black};\n  }\n  img {\n    width: 100%;\n    display: inherit;\n    @media screen and (min-width: 40rem) {\n      width: auto;\n      height: 100%;\n    }\n  }\n`;\n\n// content\nconst Content = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: ${spacing.large};\n  @media screen and (min-width: 40rem) {\n    width: calc(100% - 15rem);\n  }\n  h2 a {\n    font-size: ${fontSize.large};\n    text-decoration: none;\n    color: ${colors.black};\n    &:hover {\n      color: ${colors.blue};\n    }\n  }\n  h3 {\n    font-size: ${fontSize.large};\n  }\n  p {\n    margin-top: ${spacing.med};\n    color: ${colors.grey};\n    font-size: $font-xSmall;\n  }\n`;\n\n// button\nconst Button = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: ${spacing.large};\n  @media screen and (min-width: 40rem) {\n    margin-top: 0;\n  }\n`;\n\n// extra\n// - default content area for LargeRepo.js\nconst Extra = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: space-around;\n  padding: ${spacing.large};\n  h2 {\n    font-size: ${fontSize.large};\n  }\n  h3 {\n    font-size: ${fontSize.med};\n  }\n  h3,\n  h4 {\n    margin-bottom: ${spacing.med};\n  }\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\nexport { Container, Header, Content, Button, Extra };\n","import React from \"react\";\n\n// if a click event occurs, trigger LargeUser.js\nimport { LargeUser } from \"./LargeUser\";\nimport UserToggle from \"./UserToggle\";\n\n// GraphQL\n// - pairs a query with a component\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// utils\nimport { dateFormat, abbrev } from \"../../utils/utils\";\n\n// styles\nimport { Container, Header, Content, Button, Extra } from \"../styles/headerContainer\";\n\n// create username query\n// - make this more basic\nconst SMALL_USER_QUERY = gql`\n  query UsernameQuery($login: String!) {\n    user(login: $login) {\n      avatarUrl\n      bio\n      createdAt\n      followers(first: 100) {\n        totalCount\n      }\n      following(first: 100) {\n        totalCount\n      }\n      login\n      name\n      url\n    }\n  }\n`;\n\nconst SmallUser = ({ login, expanded, btnClick }) => (\n  <Query query={SMALL_USER_QUERY} variables={{ login }}>\n    {({ loading, error, data }) => {\n      // return loading and error first\n      if (loading) return <>Loading user details...</>;\n      if (error) return <>Username not found</>;\n\n      const { avatarUrl, bio, createdAt, login, name, url, followers, following } = data.user;\n\n      return (\n        <Container>\n          <Header className=\"user-header\">\n            <img src={avatarUrl} alt={name} />\n          </Header>\n          <Content>\n            <h2>\n              <a href={url}>{login}</a>\n            </h2>\n            {name && <p>a.k.a. {name}</p>}\n            {bio && <p>{!expanded ? abbrev(bio, 90) : bio}</p>}\n            <p>Created account on: {dateFormat(createdAt)}</p>\n            {(followers.totalCount > 0 || following.totalCount > 0) && (\n              <p>\n                {followers.totalCount > 0 && `${followers.totalCount} followers`}\n                {following.totalCount > 0 && ` ${following.totalCount} following`}\n              </p>\n            )}\n            <Button>\n              <UserToggle onClick={btnClick} expanded={expanded} />\n            </Button>\n          </Content>\n          {expanded && (\n            <Extra>\n              <LargeUser login={login} />\n            </Extra>\n          )}\n        </Container>\n      );\n    }}\n  </Query>\n);\n\nexport { SMALL_USER_QUERY, SmallUser };\n","import React from \"react\";\n\nimport { SmallUser } from \"./SmallUser\";\n\n// - default show small user\n// - on click expand user details (with LargeUser component)\nexport default class UserDetails extends React.Component {\n  state = {\n    expanded: false\n  };\n\n  detailsToggle = () => {\n    const expanded = this.state.expanded;\n    this.setState({ expanded: !expanded });\n  };\n\n  render() {\n    const { login } = this.props;\n    const { expanded } = this.state;\n\n    return (\n      <>\n        <SmallUser\n          login={login}\n          expanded={expanded}\n          btnClick={this.detailsToggle}\n        />\n      </>\n    );\n  }\n}\n","// child component of UserRepos.js\n// - shows repos created, forked and contributed to\n// - has a graphql query\nimport React from \"react\";\n\n// GraphQL\n// - pairs a query with a component\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// repo stats query\nconst REPO_STATS_QUERY = gql`\n  query RepostatsQuery($login: String!) {\n    user(login: $login) {\n      repositories(first: 100) {\n        totalCount\n        edges {\n          node {\n            isFork\n          }\n        }\n      }\n      repositoriesContributedTo(first: 100) {\n        totalCount\n      }\n    }\n  }\n`;\n\nconst RepoStats = ({ login }) => (\n  <Query query={REPO_STATS_QUERY} variables={{ login }}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading user's statistics...</div>;\n      if (error) return <div>Statistics not found</div>;\n\n      // get the different repo types\n      const { repositories, repositoriesContributedTo } = data.user;\n      // forked and non-forked\n      const forkedRepoCount = repositories.edges.filter(\n        item => item.node.isFork\n      ).length;\n      const nonForkedCount = repositories.totalCount - forkedRepoCount;\n\n      return (\n        <>\n          {(repositories.totalCount > 0 ||\n            repositoriesContributedTo.totalCount > 0) && (\n            <div>\n              {repositories.totalCount > 0 &&\n                `${nonForkedCount} repositories authored, ${forkedRepoCount} repositories forked`}\n              {repositoriesContributedTo.totalCount > 0 &&\n                `, and ${\n                  repositoriesContributedTo.totalCount\n                } repositories contributed to`}\n            </div>\n          )}\n        </>\n      );\n    }}\n  </Query>\n);\n\nexport { REPO_STATS_QUERY, RepoStats };\n","import React from \"react\";\n\n// styles\nimport { ArrowButton } from \"../styles/buttons\";\n\n// slides between SmallRepo and LargeRepo\nconst RepoDetailToggle = props => {\n  const { owner, name, direction, onClick } = props;\n  // pass in e for the offset position\n  return (\n    <ArrowButton onClick={e => onClick({ owner, name }, e)}>\n      <svg\n        aria-labelledby={name}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"48\"\n        height=\"48\"\n        viewBox=\"0 0 48 48\"\n      >\n        <title id={name} lang=\"en\">\n          {name}\n        </title>\n        {direction === \"forwards\" && (\n          <path d=\"M20 12l-2.83 2.83L26.34 24l-9.17 9.17L20 36l12-12z\" />\n        )}\n        {direction === \"backwards\" && (\n          <path d=\"M30.83 14.83L28 12 16 24l12 12 2.83-2.83L21.66 24z\" />\n        )}\n      </svg>\n    </ArrowButton>\n  );\n};\n\nexport default RepoDetailToggle;\n","// repoContainers - anything specific to repos\n\n// get variables\nimport styled from \"styled-components\";\nimport styleVars from \"./styleVars\";\nconst { colors, spacing, fontSize, boxShadow } = styleVars;\n\n// - - - - - - - - - - -\n// repo sliding container\n// - contains <ul> and LargeRepo.js\n// - takes props to transform left\n// - change to div container, ul and div as siblings\nconst RepoContainer = styled.div`\n  overflow: hidden; // cuts off box shadow on containers\n  > div {\n    display: flex;\n    align-items: flex-start;\n    width: 200%;\n    transition: transform ease-in-out 0.75s;\n    ${props => (props.expanded ? `transform: translateX(-50%)` : \"\")};\n    > ul,\n    > div {\n      width: 50%;\n    }\n    ${props => (props.expanded ? `li{box-shadow: none;}` : \"\")};\n  }\n`;\n\n// - - - - - - - - - - -\n// repo containers\n// - base style\nconst RepoBase = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${spacing.xLarge};\n  background-color: ${colors.white};\n  box-shadow: ${boxShadow.out};\n  border-radius: ${spacing.small};\n  // heading\n  h3 {\n    font-size: ${fontSize.med};\n  }\n`;\n\n// 1.\n// - simple repo with coloured border at the top\nconst Repo = styled(RepoBase)`\n  padding: ${spacing.large};\n  // language colours\n  border-top: ${spacing.large} solid ${props => (props.langColor ? props.langColor : \"white\")};\n  .language {\n    padding: ${spacing.xSmall} ${spacing.small};\n    background-color: ${props => (props.langColor ? props.langColor : colors.grey)};\n    color: ${props => (props.langName === \"JavaScript\" ? colors.black : colors.white)};\n  }\n  // button position\n  button {\n    align-self: flex-end;\n    @media screen and (min-width: 35rem) {\n      position: absolute;\n      top: calc(50% - ${spacing.xLarge});\n    }\n  }\n`;\n\n// - - - - - - - - - - -\n// repo features\n\n// - generic section\nconst RepoSection = styled.section`\n  margin-top: ${spacing.large};\n  ${props =>\n    props.borderTop\n      ? `margin-top: ${spacing.med};\n    padding-top: ${spacing.large};\n    border-top: ${spacing.xSmall} solid ${colors.grey};`\n      : \"\"};\n  // spans for stats\n  span {\n    margin: 0 ${spacing.xSmall};\n    color: ${colors.darkGrey};\n  }\n`;\n\n// - - - - - - - - - - -\n// 2.\n// - filesize data\n\n// - - - - - - - - - - -\n// 3. language chart and data\n// - language chart\nconst LangChart = styled.div`\n  display: flex;\n  height: ${spacing.xLarge};\n  margin-bottom: ${spacing.med};\n`;\n\n// - language cells\nconst LangCell = styled.div`\n  cursor: pointer;\n  width: ${props => (props.cellWidth ? `${props.cellWidth}%` : \"auto\")};\n  background-color: ${props => (props.colorHex ? props.colorHex : \"white\")};\n  // add a border if colour is null\n  ${props => (props.colorHex ? \"\" : `border: 0.05rem solid ${colors.black}`)};\n`;\n\n// - language labels\nconst LangLabel = styled.li`\n  display: flex;\n  align-items: center;\n  margin-right: ${spacing.small};\n  margin-bottom: ${spacing.small};\n  .dot {\n    display: inline-block;\n    margin-right: ${spacing.small};\n    width: ${spacing.large};\n    height: ${spacing.large};\n    border-radius: ${spacing.med};\n    background-color: ${props => (props.colorHex ? props.colorHex : \"white\")};\n    // add a border if colour is null\n    ${props => (props.colorHex ? \"\" : `border: 0.05rem solid ${colors.black}`)};\n  }\n  span {\n    margin-left: ${spacing.small};\n    color: ${colors.darkGrey};\n  }\n`;\n\n// - - - - - - - - - - -\n// 4. commit chart\nconst CommitChart = styled.div`\n  display: flex;\n  align-items: flex-end;\n  height: calc(6 * ${spacing.xLarge});\n  margin: ${spacing.med} 0;\n  padding: ${spacing.xSmall} ${spacing.med};\n  border-bottom: 0.05rem solid ${colors.midGrey};\n  > div {\n    width: ${props => (props.barWidth ? `${props.barWidth}%` : \"auto\")};\n  }\n`;\n\n// set the height, border, and background colour\nconst CommitCol = styled.div`\n  height: ${props => (props.barHeight ? `${props.barHeight}%` : 0)};\n  // no colour, border or cursor if no prop\n  ${props => (props.barHeight ? `border: 0.05rem solid ${colors.white}` : \"\")};\n  ${props => (props.barHeight ? `background-color: rgba(3, 72, 163, ${props.barColour})` : \"\")};\n  ${props => (props.barHeight ? `cursor: pointer` : \"\")};\n`;\n\nexport { RepoContainer, Repo, RepoSection, LangChart, LangCell, LangLabel, CommitChart, CommitCol };\n","// small repo\n// - child component of RepoList.js, a <li> element\n// - works with authored/forked and contibuted queries in RepoList\nimport React from \"react\";\n\n// Components\nimport RepoDetailToggle from \"./RepoDetailToggle\";\n\n// utils\nimport { dateFormat } from \"../../utils/utils\";\n\n// styles\nimport { Repo } from \"../styles/repoContainers\";\n\nconst SmallRepo = props => {\n  const { onClick, createdAt, isFork, name, primaryLanguage, updatedAt, stargazers, watchers } = props;\n\n  // pass owner and name into RepoDetailToggle\n  // - toggle LargeRepo\n  const owner = props.owner.login;\n\n  // primaryLanguage can be null. If so, styled component makes this grey\n  const langColor = primaryLanguage ? primaryLanguage.color : null;\n  const langName = primaryLanguage ? primaryLanguage.name : \"N/A\";\n\n  // combine created and updated if on same date\n  return (\n    <>\n      <Repo langColor={langColor} langName={langName}>\n        <h3>{name}</h3>\n        <p>\n          Created: {dateFormat(createdAt)} | Last Updated: {dateFormat(updatedAt)} {isFork && \"| Forked\"}\n        </p>\n        <p>\n          Main Language: <span className=\"language\">{langName}</span>\n        </p>\n        <p>\n          {stargazers.totalCount} Stargazers | {watchers.totalCount} Watchers\n        </p>\n        <RepoDetailToggle onClick={onClick} owner={owner} name={name} direction={\"forwards\"} />\n      </Repo>\n    </>\n  );\n};\n\nexport { SmallRepo };\n","// child component of UserRepos.js\n// - shows list of repos authored (inc. forked), OR contributed to\n// - has a graphql query\nimport React from \"react\";\n\n// Components\nimport { SmallRepo } from \"./SmallRepo\";\n\n// GraphQL\n// - pairs a query with a component\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// repo list queries\n// - load repos OR repos contributed to, based on props\n// - can cut down on these queries, just totalCount stuff\nconst REPOS_AUTHORED_QUERY = gql`\n  query ReposAuthoredQuery($login: String!) {\n    user(login: $login) {\n      repositories(first: 100) {\n        totalCount\n        edges {\n          node {\n            id\n            name\n            url\n            description\n            createdAt\n            updatedAt\n            isFork\n            primaryLanguage {\n              name\n              color\n            }\n            owner {\n              login\n            }\n            stargazers(first: 100) {\n              totalCount\n            }\n            watchers(first: 100) {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst REPOS_CONTRIBUTED_QUERY = gql`\n  query ReposContributedQuery($login: String!) {\n    user(login: $login) {\n      repositoriesContributedTo(first: 100, includeUserRepositories: false) {\n        totalCount\n        edges {\n          node {\n            id\n            name\n            url\n            description\n            createdAt\n            isFork\n            updatedAt\n            primaryLanguage {\n              name\n              color\n            }\n            owner {\n              login\n            }\n            stargazers(first: 100) {\n              totalCount\n            }\n            watchers(first: 100) {\n              totalCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n// pick a query to run, based on search prop\nconst obj = {\n  authored: REPOS_AUTHORED_QUERY,\n  contributed: REPOS_CONTRIBUTED_QUERY\n};\n\nconst RepoList = ({ login, search, onClick }) => (\n  //   console.log(search);\n  <Query query={obj[search]} variables={{ login }}>\n    {({ loading, error, data }) => {\n      if (loading) return <>Loading repositories...</>;\n      if (error) return <>Repositories not found</>;\n\n      // get key of repo list to render\n      // - authored or contributed to\n      const listKey = Object.keys(data.user)[0];\n      const repoList = data.user[listKey].edges;\n\n      return (\n        <>\n          {repoList.length > 0 && (\n            <ul>\n              {repoList.map(item => (\n                <SmallRepo\n                  key={item.node.id}\n                  {...item.node}\n                  onClick={onClick}\n                />\n              ))}\n            </ul>\n          )}\n        </>\n      );\n    }}\n  </Query>\n);\n\nexport { REPOS_AUTHORED_QUERY, REPOS_CONTRIBUTED_QUERY, RepoList };\n","import React from \"react\";\n\n// styles\nimport { ToggleButton } from \"../styles/buttons\";\n\n// works with user repo search types in UserRepos.js\nconst RepoSearchToggle = props => {\n  const { text, type, active, onClick } = props;\n\n  return (\n    <ToggleButton id={type} onClick={onClick} isActive={active}>\n      {text}\n    </ToggleButton>\n  );\n};\n\nexport default RepoSearchToggle;\n","// RepoSizeData.js\n// - total byte size of repo (on the disk) - maybe indicative of git history?\n// - total byte size of code the user has written\nimport React from \"react\";\n\n// utils and styles\nimport { repoSize } from \"../../utils/utils\";\nimport { RepoSection } from \"../styles/repoContainers\";\n\nconst RepoSizeData = props => {\n  const { disk, size } = props;\n\n  return (\n    <RepoSection borderTop={true}>\n      <h3>Size Stats:</h3>\n      <p>\n        Total Code Written - <span>{repoSize(size)}</span>\n      </p>\n      <p>\n        Space on Disk - <span>{repoSize(disk)}</span>\n      </p>\n    </RepoSection>\n  );\n};\nexport default RepoSizeData;\n","// RepoLangChart.js\n// - language chart and % data\nimport React from \"react\";\n\n// utils and styles\nimport { objMake, arrMake, arrToObj } from \"../../utils/utils\";\nimport { RepoSection, LangChart, LangCell, LangLabel } from \"../styles/repoContainers\";\n\nconst RepoLangChart = props => {\n  const { edges } = props;\n  // combine language and size into array of single objects\n  const details = objMake(edges, \"node\");\n  const size = arrMake(edges, \"size\");\n  const languages = arrToObj(details, size);\n\n  // get % width of each block\n  const Xer = 100 / size.reduce((a, b) => a + b);\n\n  // cell and label arrays - avoids looping twice\n  const cells = [],\n    labels = [];\n\n  // chart cells and labels\n  // - push components to arrays to be rendered later\n  languages.map(item => {\n    const { size, color, name } = item;\n    const percentSize = Xer * size;\n    cells.push(<LangCell key={name} title={`${percentSize.toFixed(0)}% ${name}`} cellWidth={percentSize} colorHex={color} />);\n    labels.push(\n      <LangLabel key={name} colorHex={color}>\n        <span className=\"dot\" />\n        {name} - <span>{percentSize < 0.01 ? \"< 0.01%\" : `${percentSize.toFixed(2)}%`}</span>\n      </LangLabel>\n    );\n    // arrow function requires a return statement\n    return false;\n  });\n\n  // do the rendering\n  return (\n    <RepoSection>\n      <h3>Language Breakdown:</h3>\n      <LangChart>{cells}</LangChart>\n      <ul>{labels}</ul>\n    </RepoSection>\n  );\n};\nexport default RepoLangChart;\n","// RepoContChart.js\n// - contribution chart\n/*\n\nhow it works:\n1. columns = no. of days repo has been worked on for. Newest date - Oldest date\n2. rows = max daily commit count\n3. create a new array based on column count, and map through it\n4. map through new array, filter each item for the repo (from props) with same date.\n5. IF same date, return repo (from prop), ELSE return object with commitCount = 0, date = Oldest date + (index * 24hrs)\n\ntodos:\n- audit for efficiency:\n  - cut down on loops\n  - render fewer divs in chart\n      - could use calculations for absolute positioning\n      - draw an svg\n      - use d3\n  - try using performance.now\n\n- show date + commit count on bar hover\n- optimise for long term repos\n  - e.g. able mediation, can't see bars, width too thin\n  - if > 1 month, add sideways scroll\n- give bars a max width (one big block if worked on for one day)\n\n- getting some infinties with calculations of chartColumns\n\n*/\nimport React from \"react\";\n\n// utils and styles\nimport { dateDiff, arrMake, arrDate } from \"../../utils/utils\";\nimport { CommitChart, CommitCol } from \"../styles/repoContainers\";\n\nconst RepoContChart = props => {\n  const { repos, totalCount } = props;\n\n  // 1.\n  // get date range (count of dates from first to last)\n  // - calculate columns\n  const oldest = repos[0].occurredAt;\n  const newest = repos[repos.length - 1].occurredAt;\n  const chartColumns = dateDiff(newest, oldest);\n  // % width of columns\n  const barWidth = 100 / chartColumns;\n  // console.log(barWidth, \"% width columns\");\n\n  // 2.\n  // get max daily commit count (relative height of bars/points on the chart)\n  // - calculate rows\n  const maxHeight = Math.max(...arrMake(repos, \"commitCount\"));\n  // get height of each bar\n  const calcHeight = (commitCount, maxCommits) => (100 / maxCommits) * commitCount; // console.log(maxHeight, \"max daily commits\");\n  // get colour of each bar (> 0.2 opacity)\n  const calcColour = height => (100 - height) / 500 + height / 100;\n\n  // 3.\n  // compose bars in charchart\n  const bars = Array(chartColumns)\n    .fill(0)\n    .map((v, i) => {\n      // 4.\n      // find the object from props with the same date\n      // - use arrDate\n      const obj = repos.find(item => new Date(item.occurredAt).toLocaleDateString() === arrDate(oldest, i));\n      return obj !== undefined\n        ? obj\n        : {\n            commitCount: 0,\n            occurredAt: arrDate(oldest, i)\n          };\n    });\n\n  // return a title for each bar\n  // - make a count / plural function for this and total count?\n  const isTitle = (commits, date) =>\n    commits > 0 ? (commits === 1 ? `${commits} commit made on ${date}` : `${commits} commits made on ${date}`) : \"\";\n\n  // return the html\n  return (\n    <>\n      <p>\n        {totalCount} {\"\"}\n        {totalCount === 1 ? \"Contribution\" : \"Contributions\"}\n        {\"\"} in total. Worked on{\" \"}\n        {chartColumns < 365 ? (chartColumns < 2 ? `over ${chartColumns} day` : `over ${chartColumns} days`) : \"for more than a year\"}{\" \"}\n      </p>\n      <CommitChart barWidth={barWidth}>\n        {bars.map((v, i) => (\n          <CommitCol\n            key={`key_${i}`}\n            title={isTitle(v.commitCount, new Date(v.occurredAt).toLocaleDateString())}\n            barHeight={calcHeight(v.commitCount, maxHeight)}\n            barColour={calcColour(calcHeight(v.commitCount, maxHeight))}\n          />\n        ))}\n      </CommitChart>\n    </>\n  );\n};\n\nexport default RepoContChart;\n","// RepoContributions.js\n// - get a user's contributions to their repositories\n// - excludes repos that are forked, or user has not contributions for\nimport React from \"react\";\n\n// GraphQL\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// Components\nimport RepoContChart from \"./RepoContChart\";\n\n// utils and styles\nimport { dateFormat } from \"../../utils/utils\";\nimport { RepoSection } from \"../styles/repoContainers\";\n\n// pass in timestamp of repo update\n// - will get commits in a one year bracket (up to one year ago) from the date given\nconst CONTRIBUTIONS_QUERY = gql`\n  query ContributionsQuery($login: String!, $updatedAt: DateTime!) {\n    user(login: $login) {\n      # id\n      # name\n      contributionsCollection(to: $updatedAt) {\n        commitContributionsByRepository(maxRepositories: 25) {\n          repository {\n            name\n            id\n            isFork\n          }\n          contributions(first: 100, orderBy: { field: OCCURRED_AT, direction: ASC }) {\n            totalCount\n            nodes {\n              commitCount\n              occurredAt\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst RepoContributions = ({ login, repoId, createdAt, updatedAt, pushedAt, isFork }) => (\n  <Query query={CONTRIBUTIONS_QUERY} variables={{ login, repoId, updatedAt, isFork }}>\n    {({ loading, error, data }) => {\n      // return loading and error first\n      if (loading) return <>Loading contributions...</>;\n      if (error) return <>Contribution details not found</>;\n      // get data for all repos user contributed to\n      const {\n        user: {\n          contributionsCollection: { commitContributionsByRepository }\n        }\n      } = data;\n\n      // initiate content variable\n      let info;\n\n      // user has contributed to the repo\n      const noContrib = commitContributionsByRepository.length === 0;\n      if (noContrib) {\n        info = <p>No User Contributions</p>;\n      }\n\n      // no data for forked repos\n      if (isFork) {\n        info = <p>No User Contributions are logged for forked repos</p>;\n      }\n\n      if (!noContrib && !isFork) {\n        // catch all other cases where contributions can't be found\n        if (commitContributionsByRepository.find(item => item.repository.id === repoId) === undefined) {\n          info = <p>No User Contributions</p>;\n        }\n        // show the repo if it isn't forked\n        // - repoId to match passed in as a prop\n        else {\n          const {\n            contributions: { nodes, totalCount }\n          } = commitContributionsByRepository.find(item => item.repository.id === repoId);\n\n          info = (\n            <div>\n              {/* old tags for dates:\n            <ul>\n              {nodes.map(item => (\n                <li key={item.occurredAt}>\n                  {dateFormat(item.occurredAt)}\n                  <span>{item.commitCount} commits</span>\n                </li>\n              ))}\n            </ul> */}\n              <RepoContChart repos={nodes} totalCount={totalCount} />\n            </div>\n          );\n        }\n      }\n\n      return (\n        <RepoSection>\n          <h3>Contribution Stats:</h3>\n          <p>\n            Worked on from: <span>{dateFormat(createdAt)}</span> to <span>{dateFormat(updatedAt)}</span>. Last Push on:{\" \"}\n            <span>{dateFormat(pushedAt)}</span>\n          </p>\n          {info}\n        </RepoSection>\n      );\n    }}\n  </Query>\n);\nexport { CONTRIBUTIONS_QUERY, RepoContributions };\n","// large repo\n// - shows more details when a small repo has been clicked on\n\n/*\nnotes / todos:\n- languages only look at file extensions, not including markdown\n- contributors = mentionable users.\n  - This includes people who have commented or code reviewed, as well as written code\n- need to parse out links in descriptions function required (utils)\n*/\nimport React from \"react\";\n\n// GraphQL\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n// Components\nimport RepoSizeData from \"./RepoSizeData\";\nimport RepoLangChart from \"./RepoLangChart\";\nimport { RepoContributions } from \"./RepoContributions\";\nimport UserThumbList from \"../UserThumbList\";\nimport RepoDetailToggle from \"./RepoDetailToggle\";\n\n// styles\nimport { Container, Extra } from \"../styles/headerContainer\";\nimport { RepoSection } from \"../styles/repoContainers\";\n\n/*\nquery notes\n- mentionable users is not contributors. Seem to require another level of clearance for this\n\n- diskUsage = total size of repo, RepoSizeData.js shows sum of language files user has written\n  - this can give a big discrepancy, e.g. in CMSes\n\n- commit history and sizes from a repo (to make a graph)\n  - require a separate query \n  - this is a user query\n  - contributions are not commits\n  https://developer.github.com/v4/object/commitcontributionsbyrepository/\n  - similar to contributions calendar\n  \n*/\nconst LARGE_REPO_QUERY = gql`\n  query LargeRepoQuery($owner: String!, $name: String!) {\n    repository(owner: $owner, name: $name) {\n      id\n      name\n      description\n      owner {\n        login\n      }\n      url\n      forkCount\n      isFork\n\n      createdAt\n      updatedAt\n      pushedAt\n      diskUsage\n\n      languages(first: 50) {\n        totalCount\n        totalSize\n        edges {\n          node {\n            color\n            name\n          }\n          size\n        }\n      }\n      mentionableUsers(first: 100) {\n        totalCount\n        edges {\n          node {\n            avatarUrl(size: 80)\n            id\n            login\n            name\n            url\n          }\n        }\n      }\n      stargazers(first: 100) {\n        totalCount\n        nodes {\n          avatarUrl(size: 80)\n          id\n          login\n          name\n          url\n        }\n      }\n      watchers(first: 100) {\n        totalCount\n        nodes {\n          avatarUrl(size: 80)\n          id\n          login\n          name\n          url\n        }\n      }\n      forks(first: 100) {\n        totalCount\n        nodes {\n          owner {\n            avatarUrl(size: 80)\n            id\n            login\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst LargeRepo = ({ owner, name, offset, onClick }) => (\n  <Query query={LARGE_REPO_QUERY} variables={{ owner, name }}>\n    {({ loading, error, data }) => {\n      // return loading and error first\n      if (loading) return <>Loading extra repo details...</>;\n      if (error) return <>Extra repo details not found</>;\n\n      const {\n        id,\n        name,\n        description,\n        owner,\n        url,\n        //\n        createdAt,\n        updatedAt,\n        pushedAt,\n        //\n        diskUsage,\n        languages,\n        mentionableUsers,\n        stargazers,\n        watchers,\n        forks,\n        isFork\n      } = data.repository;\n\n      // RepoSizeData.js\n      // - language file size + space on disk\n      const { totalSize } = languages;\n      const sizeData = { disk: diskUsage * Math.pow(10, 3), size: totalSize };\n\n      // RepoContributions.js\n      // - gets contributions to the repo within the past year\n      // - no contributions are logged on forked repos, or group repos\n      const { login } = owner;\n      const repoId = id;\n      const contribData = { login, repoId, createdAt, updatedAt, pushedAt, isFork };\n\n      return (\n        <Container offSet={offset}>\n          <Extra>\n            <h2>{name}</h2>\n            {description && <p>{description}</p>}\n            {languages.totalSize > 0 && <RepoSizeData {...sizeData} />}\n            {languages.totalSize > 0 && <RepoLangChart {...languages} />}\n\n            <RepoContributions {...contribData} />\n            <RepoSection>\n              {mentionableUsers.totalCount > 0 && (\n                <>\n                  <h4>Contributors:</h4>\n                  <UserThumbList thumbs={mentionableUsers.edges} type={\"collaborators\"} />\n                </>\n              )}\n              {stargazers.totalCount > 0 && (\n                <>\n                  <h4>Stargazers:</h4>\n                  <UserThumbList thumbs={stargazers.nodes} />\n                </>\n              )}\n              {watchers.totalCount > 0 && (\n                <>\n                  <h4>Watchers:</h4>\n                  <UserThumbList thumbs={watchers.nodes} />\n                </>\n              )}\n              {forks.totalCount > 0 && (\n                <>\n                  <h4>Forked by:</h4>\n                  <UserThumbList thumbs={forks.nodes} type={\"forks\"} />\n                </>\n              )}\n            </RepoSection>\n            <p>\n              <a href={url}>Link to Repo ></a>\n            </p>\n            <RepoDetailToggle onClick={onClick} direction={\"backwards\"} />\n          </Extra>\n        </Container>\n      );\n    }}\n  </Query>\n);\n\nexport { LARGE_REPO_QUERY, LargeRepo };\n","import React from \"react\";\n\n// Components\nimport { RepoStats } from \"./RepoStats\";\nimport { RepoList } from \"./RepoList\";\nimport RepoSearchToggle from \"./RepoSearchToggle\";\nimport { LargeRepo } from \"./LargeRepo\";\n\n// styles\nimport { Stats } from \"../styles/text\";\nimport { RepoContainer } from \"../styles/repoContainers\";\n\nexport default class UserRepos extends React.Component {\n  // active repo id could be added here (for slide in repo expand)\n  // - needs to be passed through 3 component layers for this to happen though\n  state = {\n    search: [\n      { text: \"Authored or Forked\", type: \"authored\", active: true },\n      { text: \"Group Contributions\", type: \"contributed\", active: false }\n    ],\n    selected: {}\n  };\n\n  searchToggle = e => {\n    // get id of clicked\n    const searchType = e.target.id;\n    const stateCopy = JSON.parse(JSON.stringify(this.state.search));\n    // update the search property of the state\n    const newState = stateCopy.map(item => {\n      item.active = false;\n      if (item.type === searchType) {\n        item.active = true;\n      }\n      return item;\n    });\n    this.setState({ search: newState });\n  };\n\n  // get owner and repo name with onClick to render LargeRepo.js as sibling of ul\n  // - slide in effect\n  // - show in viewport\n  detailsToggle = (details, e) => {\n    // offset of parent container\n    const divOff = e.target.closest(\"div\").parentNode.offsetTop;\n\n    // set offset only if scrolled\n    if (!this.state.selected.owner && window.pageYOffset > divOff) {\n      // total offset (32 is body top padding)\n      const offset = window.pageYOffset - divOff + 32;\n      // combine details and offset in a new object\n      const newDetails = { ...details, offset };\n      this.setState({ selected: newDetails });\n    } else {\n      this.setState({ selected: details });\n    }\n  };\n\n  render() {\n    const { login } = this.props;\n    const { search, selected } = this.state;\n    const { owner, name, offset } = selected;\n\n    // for RepoContainer styling\n    const expanded = owner ? true : false;\n\n    // get active search to pass to repo list\n    const activeSearch = search.filter(item => item.active === true)[0].type;\n\n    return (\n      <>\n        <Stats>\n          <RepoStats login={login} />\n          {search.map(item => (\n            <RepoSearchToggle key={item.type} {...item} onClick={this.searchToggle} />\n          ))}\n        </Stats>\n        <RepoContainer expanded={expanded}>\n          <div>\n            <RepoList login={login} search={activeSearch} onClick={this.detailsToggle} />\n            {selected.owner && <LargeRepo owner={owner} name={name} offset={offset} onClick={this.detailsToggle} />}\n          </div>\n        </RepoContainer>\n      </>\n    );\n  }\n}\n","// React\nimport React from \"react\";\n\n// apollo\nimport { ApolloProvider } from \"react-apollo\";\n\n// graphql client\nimport { graphqlClient } from \"../utils/graphqlClient\";\n\n// Components\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Search from \"./Search\";\nimport UserDetails from \"./UserComponents/UserDetails\";\nimport UserRepos from \"./RepoComponents/UserRepos\";\n\n// colour - for background\nimport styleVars from \"./styles/styleVars\";\nconst { colors } = styleVars;\n\n// App\nexport default class App extends React.Component {\n  state = {\n    login: false, // logged out by default\n    token: \"\", // from local env variable, or from github login\n    username: \"\",\n    searchType: \"userdetails\", // default search for a user\n    suggestions: [] // autocomplete\n  };\n\n  // check the environment, and set the token when component mounts\n  componentDidMount() {\n    // local\n    if (process.env.NODE_ENV === \"development\") {\n      this.setState({ login: true, token: process.env.REACT_APP_GET_ME_IN });\n    }\n    // github\n    // - if the correct token is in sessionStorage, set it\n    else {\n      const tokenKey = Object.keys(sessionStorage).find(item =>\n        item.startsWith(\"githubGraphQL\")\n      );\n      const token = sessionStorage[tokenKey];\n      if (token) this.setState({ login: true, token });\n    }\n  }\n\n  // logout\n  // - remove token from sessionStorage\n  logoutSubmit = () => {\n    const tokenKey = Object.keys(sessionStorage).find(item =>\n      item.startsWith(\"githubGraphQL\")\n    );\n    sessionStorage.removeItem(tokenKey);\n    this.setState({ login: false, token: \"\" });\n  };\n\n  // login submit\n  // - sets a token to be entered into graphql client, allowing searches\n  // - add token to sessionStorage - user won't have to login on page refresh\n  loginSubmit = accessToken => {\n    sessionStorage.setItem(`githubGraphQL`, accessToken);\n    this.setState({ login: true, token: accessToken });\n  };\n\n  // search submit\n  // - search user details, or repos\n  searchSubmit = formDetails => {\n    const { username, searchType } = formDetails;\n    this.setState({ username, searchType });\n  };\n\n  render() {\n    const { login, username, searchType, token } = this.state;\n\n    // logged out\n    // - set background gradient to pink\n    const bgGrad = !login ? colors.bgPink : colors.bgBlue;\n    document.body.style.background = `linear-gradient(215deg, ${bgGrad}, rgba(255, 255, 255, 0.65)), linear-gradient(65deg, ${bgGrad}, rgba(255, 255, 255, 0.35))`;\n\n    // logged in\n    // - convert token to graphql client\n    const client = token ? graphqlClient(token) : \"\";\n\n    // conditional rendering, based on login status\n    // - if logged in, render result components based on state:\n    // 1. UserDetails.js\n    // 2. UserRepos.js\n    const pageContent = !login ? (\n      <>\n        <p>Enter your Github username and password to start searching.</p>\n        <Login loginSubmit={this.loginSubmit} loginStatus={login} />\n      </>\n    ) : (\n      <>\n        <p>Enter a valid Github username to start searching...</p>\n        <Search\n          {...this.state}\n          searchSubmit={this.searchSubmit}\n          loginStatus={login}\n        />\n        <ApolloProvider client={client}>\n          {username && searchType === \"userdetails\" && (\n            <UserDetails login={username} />\n          )}\n\n          {username && searchType === \"repodetails\" && (\n            <UserRepos login={username} />\n          )}\n        </ApolloProvider>\n      </>\n    );\n\n    // check if Header is rendered twice if props don't change\n    // - look at pure components, and shouldComponentUpdate() if so\n    return (\n      <div className=\"container\">\n        <Header loginStatus={login} logoutSubmit={this.logoutSubmit} />\n        {pageContent}\n      </div>\n    );\n  }\n}\n","import { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n// graphql client\n// - takes an access token created by an env file, or github login\nconst graphqlClient = accessToken => {\n  // setup httplink and cache\n  const httpLink = new HttpLink({\n    uri: \"https://api.github.com/graphql\",\n    headers: {\n      authorization: `Bearer ${accessToken}`\n    }\n  });\n  const cache = new InMemoryCache();\n\n  // specify link and cache properties on graphql config object\n  return new ApolloClient({\n    link: httpLink,\n    cache\n  });\n};\n\nexport { graphqlClient };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}